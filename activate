# This file must be used with "source bin/activate" you cannot run it directly
deactivate () {
    # reset old environment variables
    if [ -n "${_OLD_PATH:-}" ] ; then
        export PATH="${_OLD_PATH:-}"
        unset _OLD_PATH
    fi

    if [ -n "${_OLD_PS1:-}" ] ; then
        export PS1="${_OLD_PS1:-}"
        unset _OLD_PS1
    fi

    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "${BASH:-}" -o -n "${ZSH_VERSION:-}" ] ; then
        hash -r
    fi

    if [ ! "$1" = "nondestructive" ] ; then
      # Self destruct!
      unset -f deactivate
    fi
}

# unset irrelevant variables
deactivate nondestructive

# Attempt to work under differnet shells
if [ -n "${BASH_SOURCE:-}" ]; then
	SCRIPTPATH="$BASH_SOURCE"
elif [ -n "${KSH_VERSION:-}" ]; then
  SCRIPTPATH="${.sh.file}"
elif [ -n "${ZSH_VERSION:-}" ]; then
  SCRIPTPATH="${(%):-%x}"
else
  # Hope for the best
	SCRIPTPATH="${$_:-$0}"
fi

# Resolve project root path and node_modules
ROOT=$(cd -P -- "$(dirname -- "$SCRIPTPATH")" && pwd -P)
NODE_MODULES="${ROOT}/node_modules"

if ! [ -d "$NODE_MODULES" ]; then
  printf "%s\n%s" \
    "Failed to find node_modules directory." \
    "Maybe you are not sourcing this script or your shell is not supported"
  exit 1
fi

# Change PATH
_OLD_PATH="$PATH"
export PATH="${NODE_MODULES}/.bin:$PATH"

# Add PS1 prompt
if [ -z "${DISABLE_PROMPT:-}" ] ; then
  _OLD_PS1="${PS1:-}"
  export PS1="$( \
    printf "%s\n%s" "[node_modules: $(basename "$ROOT")]" "${PS1:-}" \
  )"
fi

# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "${BASH:-}" -o -n "${ZSH_VERSION:-}" ] ; then
    hash -r
fi
